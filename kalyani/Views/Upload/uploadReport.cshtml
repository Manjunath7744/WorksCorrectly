
@{
    ViewBag.Title = "uploadReport";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="panel panel-info">
    <div class="panel-heading"><b>Upload Reports</b></div>
    <div class="panel-body">

        <div class="col-md-3">
            @Html.DropDownList("ddlLocation", new SelectList(ViewBag.ddluploadType, "id", "uploadName"), "--Select--", new { @class = "form-control m-b", @data_field = "uploadType", @id = "uploadType", @onchange = "binUploadData();" })
            @*<select name="uploadType" id="uploadType" class="form-control m-b">
                    @for (uploadType < -uploadTypes)
                    {
                        <option value="@uploadType">@uploadType</option>
                    }
                </select>*@
        </div>
        <div class="col-md-3">
            <div style="display:none">
                <button class="btn btn-sm btn-primary" onclick="downloadAllFiles();"><i class="fa fa-download"> Download All Files</i></button>
            </div>
        </div>
        <br>

        <div class="row">
            <div class="col-lg-12">

                <br>
                <div class="panel panel-info">
                    <div class="panel-heading"><b>Search</b></div>
                    <div class="panel-body">
                        <div class="table table-responsive">
                            <table class="table table-striped table-bordered table-hover" id="tbluploadlist">
                                <thead>
                                    <tr>

                                        <th>File Name</th>
                                        @*<th>filePath</th>*@
                                        <th>Uploaded By</th>
                                        <th>Status</th>
                                        <th>Uploaded Date</th>
                                        <th>Number Accepted</th>
                                        <th>Processing Errors</th>
                                        <th>Number Discarded</th>
                                        <th>Error</th>
                                        @*<th>isError</th>*@
                                        <th>Processing Start</th>
                                        <th>Processing End</th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>
@section scripts
{
    <script>

  $(document).ready(function() {
      binUploadData();
});
        function parseJsonTime(datetime) {
            var ConDate = "";
            var times = "";
            if (datetime != null) {
                ConDate = new Date(parseInt(datetime.substr(6)));
                times = ConDate.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true });

                if (times != null || times != "") {
                    console.log(times);

                    return times;
                }
                else {
                    console.log(times);

                    return times;

                }
            }
            else {
                return ConDate;
            }
        }


    function downloadAllFiles() {
        $('a.downloadFiles').each(function () {
            var href = $(this).attr("href");
            $(this)[0].click();
        });
    }

        var uploadlistTable;

        var binUploadData = function (response) {

            var codePath = window.location.href;
            var callIndex = codePath.indexOf('Upload');
            var callPath = codePath.substr(callIndex, (codePath.length - 1));
            codePath = codePath.replace(callPath, '');

            if ($.fn.dataTable.isDataTable('#tbluploadlist')) {
                uploadlistTable.draw();
            }

            else {

           uploadlistTable=  $("#tbluploadlist").DataTable({
                    "bServerSide": true,
               "sAjaxSource": siteRoot + "/Upload/getAllUploads/",
               'bProcessing': true,                     
                    "fnServerData": function (sSource, aoData, fnCallback) {
                    var selectedType = $('#uploadType :selected').text();

                   aoData.push({ "name": "uploadType", "value": selectedType });

                        $.ajax({

                            type: "Get",
                            data: aoData,
                            url: sSource,
                            success: fnCallback
                        })

                    },
                    "aoColumns": [
                        {
                            "mData": { uploadPath: "uploadPath", fileName: "fileName" }, "render": function (data, type, row) {
                                return "<a href='" + codePath + data.uploadPath + "' class='downloadFiles' download>" + data.fileName + "</a>";

                            }
                        },
                        { "mData": "managerName", "name": "managerName" },
                        { "mData": "processingStatus", "name": "processingStatus" },

                        {
                            "mData": "uploadedDateTime", "render": function (data, type, row) {
                                return parseJsonDateTime(data);
                            }
                        },
                        { "mData": "numberProcessed", "name": "numberProcessed" },
                        { "mData": "processingError", "name": "processingError" },
                        { "mData": "numberDiscarded", "name": "numberDiscarded" },
                        {
                            "mData": { errorPath: "error", fileName: "fileName" }, "render": function (data, type, row) {
                                if (data.error != null) {
                                    return "<a href='" + codePath + data.error + "' class='downloadFiles' download>" + data.fileName + "</a>";
                                }
                                else {
                                    return "-";
                                }
                            }
                        },

                        {
                            "mData": "processingStartedDT", "render": function (data, type, row) {
                                return parseJsonTime(data);
                            }
                        },

                        {
                            "mData": "processingEndedDT", "render": function (data, type, row) {
                                return parseJsonTime(data);
                            }
                        }

                    ]

                });
            }
        }
    


    </script>
}