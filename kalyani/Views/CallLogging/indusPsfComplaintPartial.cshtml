@model AutoSherpa_project.Models.ViewModels.CallLoggingViewModel


<style type="text/css">
    .Icon-Container {
        position: absolute;
        left: 30px;
    }

    .Icon-Container-NonTech {
        position: absolute;
        left: 54%;
    }

    .col-md-3 {
        width: 20%;
    }

    .col-xs-12{
        width:100% !important;
    }
</style>
@*<div class="panel panel-primary">
    <div class="panel-heading" align="center" ; style="background-color:#1797be;">
        <img src="~/public/images/INTERACTION HISTORY.png" style="width:17px" />&nbsp;<b>
    @if (ViewBag.typeOfPSF == 4)
    {
        @:PSF DISPOSITION FORM COMPLAINT RESOLUTION
    }
    else
    {
        @:PSF DISPOSITION FORM COMPLAINT RESOLUTION
    }
</b>
    </div>*@

@Html.TextBoxFor(m => m.compInteractions.Benefits, new {@type="hidden" })
@Html.TextBoxFor(m => m.compInteractions.DissatStatus_id, new {@type="hidden" })
@Html.TextBoxFor(m => m.compInteractions.complaint_creid, new {@type="hidden" })
@Html.TextBoxFor(m => m.compInteractions.campaign_id, new {@type="hidden" })
@Html.TextBoxFor(m => m.compInteractions.customer_id, new {@type="hidden" })
@Html.TextBoxFor(m => m.compInteractions.vehicle_id, new {@type="hidden" })
@Html.TextBoxFor(m => m.compInteractions.issueDateTime, new {@type="hidden" })
@Html.TextBoxFor(m => m.compInteractions.location_id, new {@type="hidden" })
@Html.TextBoxFor(m => m.compInteractions.psfassignedInteraction_id, new {@type="hidden" })
@Html.TextBoxFor(m => m.compInteractions.bucket_id, new {@type="hidden" })
@Html.TextBoxFor(m => m.compInteractions.compRaisedCreId, new {@type="hidden" })
@Html.TextBoxFor(m => m.compInteractions.compRaisedCreName, new {@type="hidden" })


    <div class="panel-body">
        <div class="col-md-12">
            <div id="isContacted" class="animated  bounceInRight">
                <label for=""><b>Did you talk to the customer?</b></label>
                <br>
                <div class="radio-inline">
                    <label>
                        @Html.RadioButtonFor(m => m.indusPsfInteraction.isContacted, "Yes", new { @Value = "Yes" })
                        @*<input type="radio" name="isContacted" value="PSF Yes" id="">*@
                        Yes
                    </label>
                </div>
                <div class="radio-inline">
                    <label>
                        @Html.RadioButtonFor(m => m.indusPsfInteraction.isContacted, "No", new { @Value = "No" })
                        @*<input type="radio" name="isContacted" value="PSF No" id="">*@
                        No
                    </label>
                </div>
            </div>
            <div style="display:none;" class="animated  bounceInRight" id="NotSpeachDiv">
                <br>
                <label for=""><b>Choose reason for not being able to talk to customer:</b></label>
                <br>
                <div class="radio">
                    <label>
                        @Html.RadioButtonFor(m => m.indusPsfInteraction.PSFDisposition, "Ringing No response")
                        @*<input type="radio" name="disposition" value="Ringing No response">*@
                        Ringing No response
                    </label>
                </div>
                <div class="radio">
                    <label>
                        @Html.RadioButtonFor(m => m.indusPsfInteraction.PSFDisposition, "Wrong Number")
                        @*<input type="radio" name="disposition" value="Wrong Number">*@
                        Wrong Number
                    </label>
                </div>
                <div class="radio">
                    <label>
                        @Html.RadioButtonFor(m => m.indusPsfInteraction.PSFDisposition, "Busy")
                        @*<input type="radio" name="disposition" value="Busy">*@
                        Busy
                    </label>
                </div>
                <div class="radio">
                    <label>
                        @Html.RadioButtonFor(m => m.indusPsfInteraction.PSFDisposition, "Switched Off / Unreachable")
                        @*<input type="radio" name="disposition" value="Switched Off / Unreachable">*@
                        Switched Off / Unreachable
                    </label>
                </div>
                <div class="radio">
                    <label>
                        @Html.RadioButtonFor(m => m.indusPsfInteraction.PSFDisposition, "Invalid Number")
                        @*<input type="radio" name="disposition" value="Invalid Number">*@
                        Invalid Number
                    </label>
                </div>
                <div class="radio">
                    <label>
                        @Html.RadioButtonFor(m => m.indusPsfInteraction.PSFDisposition, "Other")
                        @*<input type="radio" name="disposition" value="NoOther" id="NOOthersCheck">*@
                        Other
                    </label>
                </div>
                <div class="row animated  bounceInRight" style="display:none;" id="NoOthers">
                    <div class="col-md-3">
                        <label><b>Please Specify</b></label>
                        @Html.TextAreaFor(m => m.indusPsfInteraction.nonContactOtherReason, new { @id = "NoOthersText1", @class = "form-control NoOthersText1 characterLimit", @rows = "1" })

                        @*<textarea type="text" class="form-control NoOthersText1 characterLimit" rows="1" name="other"></textarea>*@
                    </div>
                </div>
                <div class="col-md-3 col-sm-12 col-xs-12">
                    <label>CRE Remarks</label>
                    @Html.TextAreaFor(m => m.listingForm.commentsList[2], new { @class = "form-control characterLimit finalRemarks" })
                </div>
                <div class="col-md-3 col-sm-12 col-xs-12">
                    <label>Customer Remarks</label>
                    @Html.TextAreaFor(m => m.listingForm.remarksList[2], new { @class = "form-control characterLimit finalRemarks" })
                </div>
                <div class="pull-right">
                    <button type="button" class="btn btn-info btn-sm" style="margin-right:5px;" onclick="notAnsback();">Back</button>
                    <button type="submit" class="btn btn-info btn-sm" name="typeOfsubmit" id="nonContactValidationPSF" value="nonContact">Submit</button>
                </div>
            </div>

            <!-- <div style="display:none;" class="row animated  bounceInRight" id="YesContactedDiv">
            <br />
            <div class="col-md-12">
                @*<p>Good Morning/Good Afternoon, I am <b> @Model.wyzuser.userName</b> from <b>@Model.wyzuser.dealerName</b>. Am I speaking to @Model.cust.customerName?</p>
                    <p>Thank you for choosing our <b>@Model.wyzuser.dealerName</b> for servicing of your <b>@Model.vehi.model</b></p>
                    <p>Can I talk to you for few minutes to take few feedback about the vehicle service.</p>*@
                    <p style="margin: 0px 0 0px;"><b>Complaint&nbsp;Resolution&nbsp;Status,Is Complaint Resolved?</b></p><br />
                                <div class="radio-inline">
                    <label>
                        @Html.RadioButtonFor(m => m.indusPsfInteraction.whatCustSaid, "Complaint Resolution Status", new { @Value = "Complaint Resolution Status",@id="complaintResoluation",@style="display:none;" })
                        @*<input type="radio" name="disposition" value="PSF_Yes" id="GoodMorningYes">*@

                    </label>
                </div>
                <div class="radio-inline">
                    <label>
                        Html.RadioButtonFor(m => m.indusPsfInteraction.whatCustSaid, "FollowUp Later", new { Value = "FollowUp Later" })
                        @*<input type="radio" name="disposition" value="Call Me Later" id="GoodMorningNo">*@
                        FollowUp Later
                    </label>
                </div>
            </div>
        </div>-->
            <div id="followUpDiv" class="animated  bounceInRight" style="display:none">
                <div class="row">
                    <div class="col-md-3 col-sm-12 col-xs-12">
                        <label>FollowUp Date</label>
                        @Html.TextBoxFor(m => m.indusPsfInteraction.FollowUpdate, new { @class = "form-control datePickerrangeto followLater", @autocomplete = "off" })
                    </div>
                    <div class="col-md-3 col-sm-12 col-xs-12">
                        <label>FollowUp Time</label>
                        @Html.TextBoxFor(m => m.indusPsfInteraction.FollowUptime, new { @class = "form-control timepicker_7 followLater", @autocomplete = "off" })
                    </div>
                    <div class="col-md-3 col-sm-12 col-xs-12">
                        <label>CRE Remarks</label>
                        @Html.TextAreaFor(m => m.listingForm.commentsList[0], new { @class = "form-control characterLimit followLater" })
                    </div>
                    <div class="col-md-3 col-sm-12 col-xs-12">
                        <label>Customer Remarks</label>
                        @Html.TextAreaFor(m => m.listingForm.remarksList[0], new { @class = "form-control characterLimit followLater" })
                    </div>
                    <div class="pull-right" style="margin-top:10px;">
                        <input type="button" value="Back" class="btn btn-sm btn-info" onclick="backFromCallMeLater();" />
                        <input type="submit" value="Submit" id="followUpSubmit" class="btn btn-sm btn-info" />
                    </div>
                </div>
            </div>
            <div id="compResolveDiv" class="row animated bounceInRight" style="display:none;margin: 10px 0px 0px 6px;">
                <b style="font-size:12pt">Complaint Resolution Status, Complaint Resolved?</b>
                <div class="row" style="margin-top:12px;">
                    <div class="col-md-3 col-sm-12 col-xs-12">
                        @Html.RadioButtonFor(m => m.compInteractions.resolutionMode, "Complaint not valid/Customer educated") Complaint not valid/Customer educated
                    </div>
                    <div class="col-md-3 col-sm-12 col-xs-12">
                        @Html.RadioButtonFor(m => m.compInteractions.resolutionMode, "Schedule a re-visit") Schedule a re-visit
                    </div>
                    <div class="col-md-3 col-sm-12 col-xs-12">
                        @Html.RadioButtonFor(m => m.compInteractions.resolutionMode, "Resolved") Resolved
                    </div>
                    @if((Session["DealerCode"]).ToString() != "SPEEDAUTO") { 
                    <div class="col-md-3 col-sm-12 col-xs-12">
                        @Html.RadioButtonFor(m => m.compInteractions.resolutionMode, "Escalate to RM") Escalate to RM
                    </div>
                    }
                    <div class="col-md-3 col-sm-12 col-xs-12">
                        @Html.RadioButtonFor(m => m.indusPsfInteraction.whatCustSaid, "FollowUp Later", new { @Value = "FollowUp Later",@id="rdFollowLater" }) FollowUp Later
                    </div>

                    <div class="pull-right" id="feedbackDiv" style="display:block;">
                        <button id="btnFeedBack" type="button" onclick="backToMain()" class="btn btn-sm btn-info">Back</button>
                    </div>
                </div>
            </div>

            <div class="row animated bounceInRight" style="display:none;margin-top: 20px;" id="interDptFeedDiv">
                <p class="EscRM"><b style="font-size:12pt" class="text-primary">Escalate&nbsp;to&nbsp;RM</b></p>
                <div class="col-md-12">
                    <label>Is there an Inter Department Lead Feedback.</label>
                    <br>
                    <div class="radio-inline">
                        <label>
                            @Html.RadioButtonFor(m => m.listingForm.LeadYes, "Capture Lead Yes", new { value = "Capture Lead Yes", @id = "LeadYesID" })
                            @*<input type="radio" name="LeadYes" value="Capture Lead Yes" id="LeadYesID">*@
                            Yes
                        </label>
                    </div>
                    <div class="radio-inline">
                        <label>
                            @Html.RadioButtonFor(m => m.listingForm.LeadYes, "Capture Lead No", new { value = "Capture Lead No", @id = "LeadNoID" })
                            @*<input type="radio" name="LeadYes" value="Capture Lead No" id="LeadNoID">*@
                            No
                        </label>
                    </div>
                    <div class="row animated  bounceInRight" style="display:none;" id="LeadDiv">
                        <div class="col-md-6 col-sm-12 col-xs-12" style="margin-left:5px;">
                            @for (int i = 0; i < Model.tags.Count; i++)
                            {
                                <div class="checkbox">
                                    <label>
                                        @Html.HiddenFor(m => m.listingForm.upsellleads[i].upsellId, new { Value = Model.tags[i].upsellLeadId, @id = "valueselectSBHidden" + Model.tags[i].upsellLeadId })
                                        @Html.CheckBox("ckUpsell", false, new { @Value = Model.tags[i].upsellLeadId, @upsell_index = 0, @data_upsellId = Model.tags[i].upsellLeadId, @id = "valueselectSB" + Model.tags[i].upsellLeadId, @class = "myOutCheckbox upsellLeadSelectDivSB", @onClick = "loadLeadBasedOnUserLocation('valueselectSB" + Model.tags[i].upsellLeadId + "','LeadSB" + Model.tags[i].upsellLeadId + "',this.id)" })
                                        @Model.tags[i].upsellType
                                    </label>
                                </div>
                                <div class="row animated  bounceInRight" style="display:none;" id="upsellLeadSelectSB_@Model.tags[i].upsellLeadId">
                                    <div class="col-md-12">
                                        <div class="col-md-4">
                                            <label for="">Location</label>
                                            @Html.DropDownList("uplocaAs", new SelectList(Model.locationList, "name", "name", Model.wyzuser.location.name), new { @class = "form-control", @id = "uplocaAS" + Model.tags[i].upsellLeadId, @onChange = "loadLeadBasedOnUserLocationSelected('uplocaAS" + Model.tags[i].upsellLeadId + "','valueselectSB" + Model.tags[i].upsellLeadId + "','LeadSB" + Model.tags[i].upsellLeadId + "')" })
                                        </div>
                                        <div class="col-md-4">
                                            <label for="">Tag to</label>
                                            @Html.DropDownListFor(m => m.listingForm.upsellleads[i].taggedTo, Enumerable.Empty<SelectListItem>(), new { @id = "LeadSB" + Model.tags[i].upsellLeadId, @class = "form-control" })
                                        </div>
                                        <div class="col-md-4">
                                            <label for="comments">Remarks</label>
                                            @Html.TextAreaFor(m => m.listingForm.upsellleads[i].upsellComments, new { @class = "form-control", @rows = "1" })
                                            @*<textarea class="form-control" rows="1" name="upsellLead[@i].upsellComments"></textarea>*@
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                    <div class="row animated bounceInRight">
                        <div class="col-md-6 col-sm-12 col-xs-12 animated bounceInRight EscRM" style="display:none;">
                            @*<p><b class="text-primary" style="font-size:12pt">Escalate to RM</b></p>*@
                            <div class="form-group">
                                <label>Select RM</label>
                                @Html.DropDownListFor(m => m.rmInteraction.regionalmgr_id, new SelectList(ViewBag.RMList, "id", "name"),"--Select--", new { @class = "form-control", @id = "RMList" })
                            </div>
                            @*<div class="form-group">
                                <label>VOC</label>
                                @Html.TextAreaFor(m => m.rework.VOC, new { @class = "form-control characterLimit", @id = "txtVOC" })
                            </div>*@
                        </div>
                        <div class="col-md-3 col-sm-12 col-xs-12">
                            <label>CRE Remarks</label>
                            @Html.TextAreaFor(m => m.listingForm.commentsList[1], new { @class = "form-control characterLimit finalRemarks" })
                        </div>
                        <div class="col-md-3 col-sm-12 col-xs-12">
                            <label>Customer Remarks</label>
                            @Html.TextAreaFor(m => m.listingForm.remarksList[1], new { @class = "form-control characterLimit finalRemarks" })
                        </div>
                    </div>
                    <div class="pull-right">
                        <button id="btnreScheduleBack" style="display:none;" type="button" onclick="custSayBack('reSchedule')" class="btn btn-sm btn-info">Back</button>
                        <button id="btnresolvedback" style="display:none;" type="button" onclick="custSayBack('resolved')" class="btn btn-sm btn-info">Back</button>
                        <button type="submit" id="custKnowledge" class="btn btn-sm btn-info">Submit</button>
                    </div>
                    <div class="pull-right" id="btncustSayBack" style="display:none;margin-right:10px;">
                        <button type="button" onclick="custBack('upsell')" class="btn btn-sm btn-info">Back</button>
                    </div>
                </div>
            </div> 
            <div class="row animated bounceInRight" id="reScheduleDiv" style="display:none; margin-top:5px;">
                <p><b class="text-primary" style="font-size:12pt;">Schedule a re-visit</b></p>
                <div class="row">
                    <div class="col-md-3 col-sm-12 col-xs-12">
                        <div class="form-group">
                            <label>Location</label>
                            @Html.DropDownList("ddllocation", new SelectList(ViewBag.locationList, "name", "name"), "--Select--", new { @class = "form-control reworkCntrl", @data_field = "location", @id = "rework_location",onchange= "ajaxCallToLoadWorkShopByCity('rework_location','rework_workshop');" })
                        </div>
                    </div>
                    <div class="col-md-3 col-sm-12 col-xs-12">
                        <div class="form-group">
                            <label>Workshop</label>
                            @Html.DropDownListFor(m => m.compInteractions.workshop_id, Enumerable.Empty<SelectListItem>(), "--Select--", new { @class = "form-control reworkCntrl", @data_field = "Workshop", @id = "rework_workshop" })
                        </div>
                    </div>
                    <div class="col-md-3 col-sm-12 col-xs-12">
                        <div class="form-group">
                            <label>Appointment Date and Time</label>
                            @Html.TextBoxFor(m => m.compInteractions.reworkDateAndTime, new { @class = "datetimePicker form-control reworkCntrl", @id = "appDateTime", @data_field = "Appointment Date and Time", @readonly = "readonly", @autocomplete = "false" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 col-sm-12 col-xs-12">
                        <label>Visit Type</label>
                        <div class="row">
                            <div class="col-md-6">
                                @Html.RadioButtonFor(m => m.compInteractions.reworkMode, "Self", new { @class = "reworkCntrlRadio", @Value = "Self", @onclick = "manageVisit(this.value)" }) Self <br />
                                @Html.RadioButtonFor(m => m.compInteractions.reworkMode, "Pickup Required", new { @class = "reworkCntrlRadio", @Value = "Pickup Required", @onclick = "manageVisit(this.value)" }) Pickup Required
                            </div>
                            <div id="pickUpDiv" style="display:none;" class="col-md-6">
                                <div class="form-group">
                                    <label for="">Select Address</label>
                                    @Html.DropDownListFor(m => m.compInteractions.reworkAddress, new SelectList(Model.cust.addresses, "concatenatedAdress", "concatenatedAdress"), new { @class = "form-control", @id = "AddressMSSId" })
                                </div>
                                <button type="button" class="btn btn-success" data-toggle="modal" data-target="#AddNewAddressPopup">Add New Address</button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="pull-right">
                    <button id="reworkBack" type="button" onclick="custBack('rework')" class="btn btn-sm btn-info">Back</button>
                    <button id="reworkNext" type="button" onclick="custNext('rework')" class="btn btn-sm btn-info">Next</button>
                </div>
            </div>

            <div id="resolvedDiv" class="row animated bounceInRight" style="display:none; margin-top:5px;">
                <p><b class="text-primary" style="font-size:12pt;">Resolved</b></p>
                <div class="col-md-3 col-sm-12 col-xs-12">
                    <div class="form-group">
                        <label>Attended On</label>
                        @Html.TextBoxFor(m => m.compInteractions.resolvedOn, new { @class = "form-control datePickerFilterFrom resolvedCntr", @data_field = "Attented On", @readonly = "readonly", @autocomplete = "false" })
                    </div>
                </div>
                <div class="col-md-3 col-sm-12 col-xs-12">
                    <div class="form-group">
                        <label>Attended By</label>
                        @Html.TextBoxFor(m => m.compInteractions.attendedBy, new { @class = "form-control resolvedCntr", @data_field = "Attented By" })
                    </div>
                </div>
                <div class="col-md-3 col-sm-12 col-xs-12">
                    <div class="form-group">
                        <label>Resolved By</label><br />
                        @Html.RadioButtonFor(m => m.compInteractions.resolvedBy, "Resolved on Phone", new { @class = "resolvedCntrRadio" }) Resolved on Phone<br />
                        @Html.RadioButtonFor(m => m.compInteractions.resolvedBy, "Home visit", new { @class = "resolvedCntrRadio" }) Home visit<br />
                        @Html.RadioButtonFor(m => m.compInteractions.resolvedBy, "Resolved by revisit", new { @class = "resolvedCntrRadio" }) Resolved by revisit<br />
                    </div>
                </div>
                <div class="col-md-3 col-sm-12 col-xs-12">
                    <div class="form-group">
                        <label>Exact Nature of Complaint</label>
                        @Html.TextBoxFor(m => m.compInteractions.natureOfComplaint, new { @id = "cmpNaturehidden", @type = "hidden" })
                        @Html.DropDownList("cmpNature", new SelectList(ViewBag.natureOfComplaints, "id", "disposition"), new { @class = "form-control selectpicker resolvedCntr", @onchange = "natureChange(this.id)", @id = "cmpNature", @data_field = "Extact Nature Of Complaint", @multiple = "multiple" })
                       <br /> <input type="checkbox" id="discountGiven" name="discountGiven" /> Does discount given?
                        <div id="discDiv" style="display:none">
                            <br/> @Html.TextBoxFor(m => m.compInteractions.discount, new {@id="hdDisCount" })
                        </div>
                       
                    </div>
                </div>
                <div class="pull-right">
                    <button id="reworkBack" type="button" onclick="custBack('resolved')" class="btn btn-sm btn-info">Back</button>
                    <button id="reworkNext" type="button" onclick="custNext('resolved')" class="btn btn-sm btn-info">Next</button>
                </div>
            </div>

        </div>
    </div><!--panel Body End-->
@*</div>*@

<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/public/CallLogFiles/indusPsfComplaint.js"></script>
<script type="text/javascript">
    $("input[type='checkbox']").on('change', function () {

        if ($(this).attr('id') == "CheckedwithDMS") {
            $('#ckWithDMS').val($(this).attr('id'));
        }
        else {
            $('#valueselectSBHidden').val($(this).attr('value'));
        }

    });

    $(document).ready(function () {
        var psfType = '@ViewBag.typeOfPSF';

        if (psfType == "4") {
            $('#interHeading').text('PSF 6TH DISPOSITION FORM');
        }
        else {
            $('#interHeading').text('PSF Complaint DISPOSITION FORM');
        }

        $('#imgInter').attr('src', siteRoot + "/public/images/INTERACTION HISTORY.png");
    });
</script>
@*<script src="@routes.Assets.at("javascripts/psf3rdDisposition.js")" type="text/javascript"></script>*@
