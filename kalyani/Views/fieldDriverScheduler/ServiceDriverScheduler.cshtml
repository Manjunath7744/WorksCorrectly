
@{
    ViewBag.Title = "ServiceDriverScheduler";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .ColorGreen {
        background-color: green;
    }

    .ColorRed {
        background-color: red;
    }
</style>
<link href="~/public/CallLogFiles/jquery-confirm.min.css" rel="stylesheet" />
<input type="hidden" id="hdDriverId"/>
<input type="hidden" id="hdPickUpTime" />
<input type="hidden" id="hdPickUpTimeRange" />
<input type="hidden" id="PkDealercode" value="@Session["DealerCode"].ToString()" />
<div class="row">
    <div class="col-lg-12">
        <div class="row">
            <div class="col-md-2">
                <label>Appointment From Date</label>
                <div class="form-group">
                    @Html.TextBox("appointmentScheduled", "From Date", new { @class = "form-control datepicker", @id = "dateis", @readonly = "readonly", @title = "From Date", @onchange = "ajaxCallForData();" })
                </div>
            </div>
            <div class="col-md-2">
                <label>Appointment To Date</label>
                <div class="form-group">
                    @Html.TextBox("dateTois", "To Date", new { @class = "form-control range1datepicker", @id = "dateTois", @readonly = "readonly", @title = "To Date", @onchange = "ajaxCallForData();" })
                </div>
            </div>
            <div class="col-md-2">
                <label>Workshop</label>
                <div class="form-group">
                    @Html.DropDownList("ddlworkshops", new SelectList(ViewBag.ddlworkshops, "workshopid", "name"), "--Select--", new { @class = "form-control selectpicker ", @id = "fieldLocation", @onchange = "ajaxCallForData();getdriverDetailsNames();" })
                </div>
            </div>
            <div class="col-md-2">
                <label>Driver</label>
                <div class="form-group">
                    @Html.DropDownList("status", new List<SelectListItem> { new SelectListItem { Text = "--Select Status --", Value = "" } }, new { @class = "form-control", @id = "driverlist", @onchange = "ajaxCallForData();" })
                </div>
            </div>
            <div class="col-md-2">
                <label>Status</label>
                <div class="form-group">
                    @Html.DropDownList("status", new List<SelectListItem> { new SelectListItem { Text = "--Select Status --", Value = "" }, new SelectListItem { Text = "Assigned", Value = "Assigned" }, new SelectListItem { Text = "UnAssigned", Value = "UnAssigned" }, new SelectListItem { Text = "All", Value = "" }, }, new { @class = "form-control", @id = "status", @onchange = "ajaxCallForData();" })
                </div>
            </div>
            <div class="col-md-2">
                <label>Status</label>
                <div class="form-group">
                    @Html.DropDownList("status", new List<SelectListItem> { new SelectListItem { Text = "--Select Status --", Value = "" }, new SelectListItem { Text = "Completed", Value = "Completed" }, new SelectListItem { Text = "Pending", Value = "Pending" }, new SelectListItem { Text = "All", Value = "" }, }, new { @class = "form-control", @id = "statusd", @onchange = "ajaxCallForData();" })
                </div>
            </div>
            <div class="col-md-2" style="display:none">
                <label>Last Diposition</label>
                <div class="form-group">
                    <select class="form-control selectpicker " id="lastDispo" multiple onchange="ajaxCallForData();">
                        <option value="3">NewBooking</option>
                        <option value="41">Confirmed</option>
                        <option value="4">Callmelater</option>
                    </select>
                </div>
            </div>
            <div class="col-md-2">
                <label>Type of Pickup</label>
                <div class="form-group">
                    <select class="form-control" id="typeoffilter" onchange="ajaxCallForData();">
                        <option value="">--Select--</option>
                        <option value="1">Pickup Only</option>
                        <option value="2">Drop Only</option>
                        <option value="3">Pickup and Drop</option>
                    </select>
                </div>
            </div>
            @*<div class="col-md-2">
                <label></label>
                <button type="button" class="form-control btn btn-info" id="" data-toggle="modal" data-target="#driverSchedulerPopUp">Scheduler</button>
            </div>*@
        </div>

        <div class="panel panel-primary">
            <div class="panel-heading" >
                <b>Appointment Data</b>
                <button style="background-color:red;float:right;height:30px;width:100px;margin-top:-5px;" onclick="clearbucketfilters();" title="CLEAR FILTER">CLEAR FILTER</button>
            </div>
            <div class="panel-body" style="overflow-x:auto;">
                <div class="dataTable_wrapper">
                    <table class="table table table-striped table-bordered table-hover cell-border" id="schFieldEx">
                        <thead>
                            <tr>
                                <th>Book</th>
                                <th>Cancel</th>
                                <th>SMS</th>
                                <th>RegNo.</th>
                                <th>Apt.Date</th>
                                <th>Apt.Time</th>
                                <th>TypeOfPickUp</th>
                                <th>CRERemarks</th>
                                <th>Address</th>
                                <th>Assigned</th>
                                <th>Driver</th>
                                <th>ScheduleTime</th>
                                <th>CustomerName</th>
                                <th>Ph.Number</th>
                                <th>ChassiNo</th>
                                <th>CRE</th>
                                <th>Last Disposition</th>
                                <th>Type</th>
                                <th>Model</th>
                                <th>workshopname</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
            <div id="buttons1"></div>
        </div>
    </div>
   

</div>
<div class="row">
    <div class="col-md-12 col-sm-12">
        <span class="code" id="tblException" style="font-size:11pt;font-weight:bold;"></span>
    </div>
</div>
<div class="modal fade" id="smsInsModal" role="dialog">
    <div class="modal-dialog modal-lg" style="width:500px;">
        <div class="modal-content">
            <div class="modal-header" style="padding: 5px; text-align: center;">
                <button type="button" class="close" data-dismiss="modal">
                    <img src="~/public/images/close1.png" />
                </button>
                <h4 class="modal-title"><b>SEND SMS</b></h4>
            </div>
            <div class="modal-body" style="padding: 5px;">
                <div class="form-group">
                    <input type="hidden" id="insVehId" />
                    <input type="hidden" id="smsrequestReference" />
                    <input type="hidden" id="serviceBookedID" />
                    <input type="hidden" id="ddlsmsTypes" />
                    <input type="hidden" id="txtworkshopId" />
                    <input type="hidden" id="txtpickupdropid" />

                    <select class="form-control" title="SMSTYPE" id="smstype" onchange="getSMSbyAndSMSType();">
                        <option value="0">--Select  --</option>
                        <option value="28">Customer</option>
                        <option value="6">Driver</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="comment">SMS Template:</label>
                    <textarea class="form-control" rows="5" id="smstemplate"></textarea>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" id="smsSendbtn" onclick="sendSMS()" class="btn btn-default smsSendType" data-dismiss="modal">
                    <img src="~/public/images/sms_logo.jpg" style="width: 20px;" />&nbsp;SEND
                </button>
            </div>

        </div>

    </div>
</div>


<!--Driver Scheduler-->
<div class="modal fade" id="driverSchedulerPopUp" role="dialog">
    <div class="modal-dialog modal-lg" style="width:85% !important;">
        <div class="modal-content">
            <div class="modal-header" style="text-align:center">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Driver - Scheduler</h4>
            </div>
            <div class="modal-body" style="padding:4px;">
                <div class="panel panel-primary">
                    <div class="panel-body mbheight">
                        <div class="row">
                            <div class="col-md-3">
                                <label>Pickup Type</label>
                                <div class="form-group">
                                    <select class="form-control" id="pickupType" name="pickupType">
                                        <option value=''>--Select--</option>
                                        <option value='1'>Pickup </option>
                                        <option value='2'>Drop</option>
                                        <option value='3'>Pickup & Drop</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-group">
                                    <label for="driverCal">Select  Date</label>
                                    <input type="text" readonly id="pickupdate" name="pickupdate" class="form-control datePickerBooking" onchange="getDriverTimingList($('#pickupdate').val(), $('#workshop').val())" value="@DateTime.Now.ToString("dd-MM-yyy")" />
                                </div>
                            </div>
                            <div class="col-md-3">
                                <label>Workshop</label>
                                <div class="form-group">
                                    @Html.DropDownList("workshopId", new SelectList(ViewBag.ddlworkshops, "workshopid", "name", ViewBag.defaultWorkshop), "--Select--", new { @class = "form-control selectLoop selectpicker", @onchange= "getDriverTimingList($('#pickupdate').val(), $('#workshop').val());", @id = "workshop" })
                                </div>
                            </div>


                            <div class="col-md-2" style="margin-top: 23px;">
                                <button type="button" id="btngetscheduler" class="btn btn-primary" onclick="getDriverTimingList($('#pickupdate').val(), $('#workshop').val())">Get Scheduler</button>
                            </div>
                        </div>

                        <div class="row" id="alocSec_div">
                            <div class="col-md-12">
                                <table id="tblDriverAllocation" border="1" class="table table-striped table-hover schis" cellspacing="0" style="cursor: pointer;"></table>
                            </div>
                        </div>
                        <button type="button" id="allcateSubmit" class="btn btn-primary pull-right"   onclick="ajaxServiceDriverSchedule()">Submit</button>

                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" id="schButton" class="btn btn-danger pull-right" data-dismiss="modal" style="display:none;">Close</button>
            </div>
        </div>
    </div>
</div>

<!--End-->

<div id="cancelappointmentModel" class="modal fade">
    <div class="modal-dialog modal-confirm">
        <div class="modal-content">
            <div class="modal-header flex-column">
                <div class="icon-box">
                    <i class="material-icons">&#xE5CD;</i>
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>

                </div>
                <h3 class="modal-title w-100">Are you sure You want to cancel you'r Appointment?</h3>
            </div>
            <div class="modal-body">
                <input type="hidden" id="txtcustomerId" />
                <input type="hidden" id="txtvehicleId" />
                <input type="hidden" id="txtpickupdropId" />
                <input type="hidden" id="txtpickupdroptype" />
            </div>
            <div class="modal-footer justify-content-center">
                <button type="button" id="btnpickup" class="btn btn-danger" onclick="cancelserviceBookings('Pickup')" >Pickup</button>
                <button type="button" id="btndrop" class="btn btn-danger" onclick="cancelserviceBookings('Drop')">Drop</button>
                <button type="button" id="btnpickupdrop" class="btn btn-danger" onclick="cancelserviceBookings('PickupDrop')" >Pickup And Drop</button>
                <button type="button" class="btn btn-info" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section scripts
{
    <script src="~/public/CallLogFiles/jquery-confirm.min.js"></script>
    <script src="~/public/javascripts/driverAllocation.js"></script>
    <script>
        function getSMSbyAndSMSType() {
            var vehicleId = $('#insVehId').val();
            var locId = $('#fieldLocation').val();
            var smstypeid = $('#smstype').val();
            var selectedOptions = $('#smstype option:selected').text();
            $("#ddlsmsTypes").val(selectedOptions);
            var typeOfDispo = "insurance";
            $.ajax({
                type: 'POST',
                url: siteRoot + "/fieldDriverScheduler/getSMSTemplateMessage/",
                datatype: 'json',
                async: false,
                cache: false,
                data: { smsId: smstypeid, locId: locId, vehicleId: vehicleId, typeOfDispo: typeOfDispo },
                success: function (res) {
                    if (res.success == true) {
                        $('#smstemplate').empty();

                        $('#smstemplate').val(res.sms);
                    }
                    else {
                        Lobibox.notify('info', {
                            continueDelayOnInactiveTab: true,
                            msg: res.error
                        });
                    }
                },
                error: function (ex) {
                    alert(ex);
                }
            });
        }

        function smsIdSetModal(custId, vehId, serviceBookedId, pickupdropid, workshopid,type) {
            $('#smstemplate').val("");
            $("#insVehId").val(vehId);
            $("#smsrequestReference").val(custId);
            $("#serviceBookedID").val(serviceBookedId);
            $("#txtworkshopId").val(workshopid);
            $("#txtpickupdropid").val(pickupdropid);
            //if (type == "driver") {
            //    if (pickupdropid == "1") {
            //        $('#pickupType').empty().append('<option selected="selected" value="1">Pickup Only</option>');

            //    }
            //    else if (pickupdropid == "2") {
            //        $('#pickupType').empty().append('<option selected="selected" value="2">Drop Only</option>');
            //    }

            //}
        }

        $(document).ready(function () {

            $('#schFieldEx').DataTable({
});
            $('.datepicker').datepicker({
                autoclose: true,
                dateFormat: 'yy-mm-dd',

                onSelect: function (date) {
                    $('.range1datepicker').datepicker("destroy");
                    $('.range1datepicker').datepicker({
                        autoclose: true,
                        dateFormat: 'yy-mm-dd',
                        minDate: $('.datepicker').datepicker('getDate')
                    });

                    var dt1 = $('.datepicker').datepicker('getDate');
                    var dt2 = $('.range1datepicker').datepicker('getDate');
                    if (dt2 <= dt1) {
                        var minDate = $('#dt2').datepicker('option', 'minDate');
                        $('.range1datepicker').datepicker('setDate', null);
                    }
                    ajaxCallForData();
                }
            });
            $(".datepickerchange").datepicker({
                dateFormat: 'yy-mm-dd',
                maxDate: "+30d",
                minDate: 0,

            });
         
        });

        function ajaxCallForData() {
            var dateIs = $('#dateis').val();
            var cityIs = $('#fieldLocation').val();
            var statusIs = $('#status').val();
            var statusd = $('#statusd').val();
            var dateIsTo = $('#dateTois').val();
            var typeoffilter = $('#typeoffilter').val();
            var driverId = $('#driverlist').val();
            var dealercode = $('#PkDealercode').val();
            lastDispo = $('#lastDispo option:selected').toArray().map(item => item.value).join();
           
            if ((dealercode != "POPULARHYUNDAI") && (dateIs == 'From Date' || cityIs == '' || dateIsTo == 'To Date')) {
                Lobibox.notify('warning', {
                    continueDelayOnInactiveTab: true,
                    msg: 'Please provide all values'
                });
                return false;
            }
            else {
                $('#schFieldEx').DataTable({
                    "destroy": true,
                    "ajax": {
                        "url": siteRoot + "/fieldDriverScheduler/ManagergetdriverservicebookedDetails/",
                        "type": "POST",
                        "datatype": "json",
                        "data": { fromDateNew: dateIs, toDateNew: dateIsTo, cityIs: cityIs, statusIs: statusIs, lastDispo: lastDispo, typeofpickup: typeoffilter, statusd: statusd, driverId: driverId }
                    },

                    "columns": [
                        {
                            "data": "Action", render: function (data, type, row) {
                                return `<a data-toggle='modal' data-target='#driverSchedulerPopUp' onclick=smsIdSetModal(${row.customer_Id},${row.vehicle_vehicle_id},${row.serviceBookedId},${row.pickdropid},${row.workshop_id},'driver');><i class='fa fa-book' aria-hidden='true' data-toggel='tooltip' style='font-size:25px;color:blue;'></i></a>`
                            }
                        },
                        {
                            "data": "Action", render: function (data, type, row) {
                                var pickupdropstatus = row.pickupdropstatus;
                                if (pickupdropstatus == "PickUpComplete" || pickupdropstatus == "DropComplete") {
                                    return `<a data-toggle='modal' ><i class='fa fa-ban' aria-hidden='true' data-toggel='tooltip' style='font-size:25px;color:red;'></i></a>`

                                }
                                else {
                                    return `<a data-toggle='modal'  onclick=cancelBookings(${row.customer_Id},${row.vehicle_vehicle_id},${row.pickdropid},${row.pickupdroptype},'${row.pickupdropstatus}',${row.serviceBookedId});><i class='fa fa-trash-o' aria-hidden='true' data-toggel='tooltip' style='font-size:25px;color:red;'></i></a>`

                                }
                            }
                        },
                        {
                            "data": "driverName", render: function (data, type, row) {
                                return `<a data-toggle='modal' data-target='#smsInsModal' onclick=smsIdSetModal(${row.customer_Id},${row.vehicle_vehicle_id},${row.serviceBookedId},${row.pickdropid},${row.workshop_id},'sms');><i class='fa fa-envelope' aria-hidden='true' data-toggel='tooltip' style='font-size:15px;color:red;'></i></a>`
                            }
                        },
                        { "data": "vehregNo", "name": "vehregNo" },
                        {
                            "data": "sheduleddate", "render": function (data, type, row) {
                                return data.split(' ')[0];
                            }
                        },
                        { "data": "scheduledtime", "name": "scheduledtime" },
                        { "data": "typeOfPickup", "name": "typeOfPickup" },
                        { "data": "creremarks", "name": "creremarks" },
                        { "data": "serviceBookingAddress", "name": "serviceBookingAddress" },
                        { "data": "driverstatus", "name": "driverstatus" },
                        { "data": "driverName", "name": "driverName" },

                        {
                            "data": { pickupDate: "pickupDate", pickupTime: "pickupTime" }, "render": function (data, type, row) {
                                if (data.sheduleddate != null) {
                                    var res = reverDate(data.pickupDate) + " / " + data.pickupTime;
                                    return res;
                                }
                                else {
                                    return "-";
                                }
                            }
                        },

                        { "data": "customerName", "name": "customerName" },
                        { "data": "phoneNumber", "name": "phoneNumber" },
                        { "data": "creName", "name": "creName" },
                        { "data": "chassisno", "name": "chassisno" },
                        { "data": "lastDisposition", "name": "lastDisposition" },
                        { "data": "serviceType", "name": "serviceType" },
                        { "data": "model", "name": "model" },
                        { "data": "workshopname", "name": "workshopname" },
                        { "data": "dstatus", "name": "dstatus" }
                    ],
                    responsive: screen.width < 500 ? true : false,
                    fixedColumns: true, fixedHeader: true,
                    "initComplete": function (data) {
                        $('#tblException').text(data.json.exceptin);
                    },
                    dom: 'frtipB',
                    buttons: [
                        'copyHtml5',
                        {
                            extend: 'csvHtml5',
                            exportOptions: {
                                columns: [2, 9, 12, 11, 10, 5, 14, 15, 3, 4, 6, 7, 8, 17, 16, 13]
                            }
                        },
                        {
                            extend: 'excelHtml5',
                            exportOptions: {
                                columns: [2, 9, 12, 11, 10, 5, 14, 15, 3, 4, 6, 7, 8, 17, 16, 13]
                            }
                        },
                    ],
                    "bDestroy": true,
                    "processing": true,
                    "serverSide": false,
                    "scrollY": 500,
                    "scrollX": true,
                    "paging": true,
                    "searching": true,
                    "ordering": true,
                    "order": []
                });
            }
        }

        function sendSMS() {
            var vehID = $("#insVehId").val();
            var custId = $("#smsrequestReference").val();
            var smstemplate = $('#smstemplate').val();
            var smstypeid = $('#smstype').val();
            var bookedId = $("#serviceBookedID").val();
            var smsto = $("#ddlsmsTypes").val();
            // smstemplate = smstemplate.replace(/[\\\#()$~'"*<>{}]/g, ' ');

            if ($('#smstemplate').val() !== "" && vehID !== 0 && custId !== 0) {

                try {
                    $.ajax({
                        type: 'POST',
                        url: siteRoot + "/fieldDriverScheduler/sendSMS/",
                        datatype: 'json',
                        cache: false,
                        data: { vehID: vehID, custId: custId, smstemplate: smstemplate, smsId: smstypeid, bookedId: bookedId, smsto: smsto },
                        success: function (res) {
                            if (res.success == true) {
                                Lobibox.notify('info', {
                                    continueDelayOnInactiveTab: true,
                                    msg: 'Response Recorded Successfully'
                                });
                            }
                            else {
                                Lobibox.notify('Warning', {
                                    continueDelayOnInactiveTab: true,
                                    msg: res.error
                                });
                                //alert(res.error);
                            }
                        },
                        error: function (ex) {
                            alert("Sesrervver Error");
                        }
                    });
                }
                catch (err) {
                    alert(err);
                }


            }
            else {
                Lobibox.notify('warning', {
                    continueDelayOnInactiveTab: true,
                    msg: 'Make sure phone no, SMS Type and Workshop is selected'
                });
            }

        }

        function getDriverTimingList(date, workshopId) {

            if (date != "" && workshopId != "") {

                $.ajax({
                    type: 'POST',
                    url: siteRoot + '/CallLogging/getDriversAndTimmingList/',
                    datatype: 'json',
                    async: true,
                    data: { date: date, workshopId: workshopId },
                    success: function (res) {

                        if ($.fn.DataTable.isDataTable("#tblDriverAllocation")) {
                            var table = $("#tblDriverAllocation").DataTable();
                            table.clear();
                            table.destroy();
                        }
                        $("#tblDriverAllocation").empty();
                        if (res.success == true) {
                            var DataTable = $("#tblDriverAllocation");
                            var drivers = res.driverList;
                            var timings = res.timingList;

                            if (drivers.length > 0 && timings.length > 0 != null) {
                                var dtHead = "<thead><tr><th>Time Slots</th>";
                                var dtHeadCelles = "";
                                var dtBody = "<tbody>";
                                var dtBodyRows = "";
                                for (var i = 0; i < drivers.length; i++) {
                                    dtHeadCelles = dtHeadCelles + `<th>${drivers[i].name}</th>`;
                                }
                                dtHead = dtHead + dtHeadCelles + '</tr></thead>';

                                for (var i = 0; i < timings.length; i++) {
                                    var Rows = "<tr>";
                                    for (var j = 0; j < (drivers.length + 1); j++) {
                                        if (j == 0) {
                                            Rows = Rows + `<td>${timings[i].timeRange}</td>`;
                                        }
                                        else {

                                            if (res.bookedSlots.filter(m => m.DriverId == drivers[(j - 1)].id && m.StartTime == timings[i].fromTime).length > 0) {
                                                Rows = Rows + `<td class="ColorRed" onclick="alert('Slot already booked,Please select other slot...');"></td>`;
                                            }
                                            else {
                                                Rows = Rows + `<td onclick="manageTimings(this)" data-driverId = "${drivers[(j - 1)].id}" data-time="${timings[i].timeRange}" data-range="${timings[i].fromTime}-${timings[i].endTime}" data-isAssigned="false"></td>`;
                                            }

                                            //Rows = Rows + "<td></td>";
                                        }
                                    }
                                    dtBodyRows = dtBodyRows + Rows + "</tr>";
                                }

                                $(DataTable).append(dtHead + dtBody + dtBodyRows + "</tbody>");

                                $(DataTable).DataTable({

                                    //  "fixedHeader": true,
                                    "scrollX": "100%",
                                    "scrollCollapse": true,
                                    "scrollY": 320,
                                    "paging": false,
                                    "searching": false,
                                    "ordering": false,
                                    "bInfo": false
                                });
                            }
                            else {
                                Lobibox.notify('warning', {
                                    continueDelayOnInactiveTab: true,
                                    msg: 'No Driver Found for workshop...'
                                });
                            }
                        }
                        else {
                            Lobibox.notify('warning', {
                                continueDelayOnInactiveTab: true,
                                msg: res.exception
                            });
                        }
                    }, error(error) {
                        //alert(error);
                        console.log(error);
                    }
                });
            }
            else {
                Lobibox.notify('warning', {
                    continueDelayOnInactiveTab: true,
                    msg: 'Please select date and workshop.'
                });
            }
        }

        function manageTimings(ele) {
            var isAssigned = $(ele).attr('data-isAssigned');
            var timing = $(ele).attr('data-time');
            if (isAssigned == "false") {
                $.confirm({
                    title: 'Confirm!',
                    closeIcon: true,
                    content: 'Do you want Assign' + "<br>" + timing,
                    buttons: {
                        Yes: function () {
                            $('td[data-isAssigned="true"]').each(function () {
                                $(this).removeClass("ColorGreen");
                            });
                            $(ele).addClass("ColorGreen");
                            $(ele).attr("data-isAssigned", "true");
                            $("#hdDriverId").val($(ele).attr("data-driverId"));

                            $('#hdPickUpTime').val(timing);
                            $('#hdPickUpTimeRange').val($(ele).attr("data-range"));
                        },
                        No: function () {

                        }
                    }
                });
            }
            else if (isAssigned == "true") {
                $.confirm({
                    title: 'Confirm!',
                    closeIcon: true,
                    content: 'Do you want Unassign' + "<br>" + timing,
                    buttons: {
                        Yes: function () {
                            $(ele).removeClass("ColorGreen");
                            $(ele).attr("data-isAssigned", "false");
                            $("#hdDriverId").val("0");
                            $('#hdPickUpTimeRange').val("");
                        },
                        No: function () {

                        }
                    }
                });
            }
        }
        function ajaxServiceDriverSchedule() {

            //var selectedBookingId = new Array();
            //$("input[name='callId[]']:checked").each(function (i) {
            //    selectedBookingId.push($(this).val());
            //});
            var bookedId = $("#serviceBookedID").val();
            var pickupTime = $('#hdPickUpTime').val();
            var timeRange = $('#hdPickUpTimeRange').val();
            var DriverId = $('#hdDriverId').val();
            var scheduledate = $('#pickupdate').val();
            var workshop = $('#workshop').val();
            var pickupType = $('#pickupType').val();
            var pickupdropid= $("#txtpickupdropid").val();

            if (bookedId == "" || bookedId=="0") {
                Lobibox.notify('warning', {
                    continueDelayOnInactiveTab: true,
                    msg: 'Please Check Service Booking Details before scheduling'
                });
                $('#driverSchedulerPopUp').hide();
                return false;
            }
            //if (selectedBookingId.length == '0') {
            //    Lobibox.notify('warning', {
            //        continueDelayOnInactiveTab: true,
            //        msg: 'Please Check Service Booking Details before scheduling'
            //    });
            //    $('#driverSchedulerPopUp').hide();
            //    return false;
            //}
            if (pickupType == "") {
                Lobibox.notify('warning', {
                    continueDelayOnInactiveTab: true,
                    msg: 'Please Select Pickup TYpe'
                });
                return false;
            }
            if (pickupTime == "" || timeRange == "" || DriverId == "" || workshop == "" || scheduledate == "") {
                Lobibox.notify('warning', {
                    continueDelayOnInactiveTab: true,
                    msg: 'Please Select the Driver Booking Details'
                });
                return false;
            }


            else {
                var urlLink = siteRoot + "/fieldDriverScheduler/assignServiceDriver/"
                $('#mainLoader').css({ 'display': 'block' });

                $.ajax({
                    type: 'POST',
                    url: urlLink,
                    async: 'true',
                    datatype: 'json',
                    data: { BookingId: bookedId, pickupTime: pickupTime, timeRange: timeRange, DriverId: DriverId, scheduledate: scheduledate, pickupType: pickupType, pickupdropid: pickupdropid },
                    cache: false,
                    success: function (res) {
                        if (res.success == true) {
                            $('#mainLoader').css({ 'display': 'none' });
                            Lobibox.notify('success', {
                                msg: 'Appointment Booked successfully.'
                            });
                            refreshData();
                        }
                        else if (res.success == false) {
                            Lobibox.notify('warning', {
                                msg: res.exception
                            });
                            $('#mainLoader').css({ 'display': 'none' });

                        }
                        else {
                            Lobibox.notify('warning', {
                                msg: 'Driver Not sheduled...'
                            });
                            $('#mainLoader').css({ 'display': 'none' });

                        }

                    },
                    error: function () {
                        Lobibox.notify('warning', {
                            msg: 'Something Went Wrong...!'
                        });
                        $('#mainLoader').css({ 'display': 'none' });

                    }
                });
            }

        }

        function refreshData() {

            ajaxCallForData();
            $("#btngetscheduler").trigger("click");

        }
        function cancelBookings(custId, vehId, pickupdropid, pickupdroptype,status,servicebookedId)
        {
            $('#txtcustomerId').val(custId);
            $('#txtvehicleId').val(vehId);
            $('#txtpickupdropId').val(pickupdropid);
            $('#txtpickupdroptype').val(pickupdroptype);

            if (pickupdroptype == "1")
            {
                if (status == "PickUpComplete")
                {
                    $('#btnpickup').attr('disabled', 'disabled');
                }
                $('#btnpickup').show();
                $('#btndrop').hide();
                $('#btnpickupdrop').hide();
            }
            else if (pickupdroptype == "2")
            {

                if (status == "DropComplete") {
                    $('#btndrop').attr('disabled', 'disabled');
                    $('#btnpickupdrop').attr('disabled', 'disabled');
                }
                $('#btnpickup').hide();
                $('#btndrop').show();
                $('#btnpickupdrop').hide();
            }
            else if (pickupdroptype == "3")
            {

                $.ajax({
                    type: 'POST',
                    "url": siteRoot + "/fieldDriverScheduler/blockscancelbuttons/",
                    async: 'true',
                    datatype: 'json',
                    data: { servicebookedId: servicebookedId },
                    cache: false,
                    success: function (res) {
                        if (res.success == true)
                        {
                            $('#btnpickup').show();
                            $('#btndrop').show();
                            $('#btnpickupdrop').show();
                            if (res.pickupblock == "true") {
                                $('#btnpickup').attr('disabled', 'disabled');
                                $('#btnpickupdrop').attr('disabled', 'disabled');
                            }
                            if (res.dropblock == "true") {
                                $('#btndrop').attr('disabled', 'disabled');
                                $('#btnpickupdrop').attr('disabled', 'disabled');
                            }
                        }
                    }
                });  
            }
            $('#cancelappointmentModel').modal('show');
        }

        function cancelserviceBookings(typeofPickup) {
           var customerId= $('#txtcustomerId').val();
           var vehicleId= $('#txtvehicleId').val();
           var pickupdropId=  $('#txtpickupdropId').val();
           var pickupdropType= $('#txtpickupdroptype').val();
            var urlLink = siteRoot + "/fieldDriverScheduler/cancelServiceDriver/"

            $.ajax({
                type: 'POST',
                url: urlLink,
                async: 'true',
                datatype: 'json',
                data: { customerId: customerId, vehicleId: vehicleId, pickupdropId: pickupdropId, pickupdropType: pickupdropType, typeofPickup: typeofPickup},
                cache: false,
                success: function (res) {
                    if (res.success == true) {
                        $('#mainLoader').css({ 'display': 'none' });
                        Lobibox.notify('success', {
                            msg: 'Appointment Cancelled successfully.'
                        });
                        $('#cancelappointmentModel').modal('hide');
                        refreshData();
                    }
                    else if (res.success == false) {
                        Lobibox.notify('warning', {
                            msg: res.exception
                        });
                        $('#mainLoader').css({ 'display': 'none' });

                    }
                    else {
                        Lobibox.notify('warning', {
                            msg: 'Driver Not sheduled...'
                        });
                        $('#mainLoader').css({ 'display': 'none' });

                    }

                },
                error: function () {
                    Lobibox.notify('warning', {
                        msg: 'Something Went Wrong...!'
                    });
                    $('#mainLoader').css({ 'display': 'none' });

                }
            });
        }

        function getdriverDetailsNames()
        {
            $("#driverlist").empty();
            var workshopId = $('#fieldLocation').val();
            $("#driverlist").prepend("<option value='' selected='selected'>--Select--</option>");

            $.ajax({
                type: 'POST',
                "url": siteRoot + "/fieldDriverScheduler/driverdetailsbyworkshop/",
                async: 'true',
                datatype: 'json',
                data: { workshopId: workshopId },
                cache: false,
                success: function (res) {
                    if (res.success == true) {
                        $.each(res.driverDetails, function (key, value) {
                            $("#driverlist").append($("<option></option>").val(value.id).html(value.driverName));
                        });
                    }
                }
            });
        }
        function clearbucketfilters() {
           $('#dateis').val('');
            $('#dateTois').val('');

            $('#fieldLocation').prop('selectedIndex', 0);
            $('#typeoffilter').prop('selectedIndex', 0);
            $('#statusd').prop('selectedIndex', 0);
            $('#status').prop('selectedIndex', 0);
            $("#driverlist").empty();
            $("#driverlist").prepend("<option value='' selected='selected'>--Select--</option>");

            $("#lastDispo").multiselect('refresh');

        }
    </script>
}

