@model AutoSherpa_project.Models.ViewModels.CallRecordingViewModel
@{
    ViewBag.Title = "Call_Recordings";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="panel panel-primary">
    <div class="panel-heading"><b>Call Recording</b></div>
    <div class="panel-body">
        <div class="row">
            <div class="col-md-12">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div class="row" id="firstRow">
                            <div class="col-md-2">
                                <div class="form-group">
                                    <label>Call Date From</label>
                                    <input type="text" class="filter form-control datePickerFilterFrom" placeholder="Call Date From" data-field="Call_Date_from" onchange="addFilter(this)" readonly />
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-group">
                                    <label>Call Date To</label>
                                    <input type="text" class="filter form-control datePickerFilterFrom" placeholder="Call Date To" data-field="Call_Date_to" onchange="addFilter(this)" readonly />
                                </div>
                            </div>

                            <div class="col-md-2" id="divCallType">
                                <div class="form-group">
                                    <label>Call Type</label>
                                    <select class="filter form-control" data-field="calltype" onchange="addFilter(this)">
                                        <option value="">--Select--</option>
                                        <option value="OUTGOING">OUTGOING</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-3" style="display:none" id="divCampaign">
                                <div class="form-group">
                                    <label>Campaign</label>
                                    @Html.DropDownList("campain",new SelectList(Model.campaignList, "campaignName", "campaignName"), "--Select--", new {@class="filter form-control", @data_field = "campaign", @onchange = "addFilter(this)" })
                                    @*<select class="filter form-control" data-column-index="3">
                                        <option value="0">--Select--</option>
                                        @for (campaign_List < -campaignList)
                                        {
                                            <option value="@campaign_List.getCampaignName()">@campaign_List.getCampaignName()</option>
                                        }


                                    </select>*@
                                </div>
                            </div>
                            <div class="col-md-2" id="divCRMType">
                                <div class="form-group">
                                    <label>CRM&nbsp;CallType&nbsp;?</label>

                                    <select class="filter form-control" data-field="CRMCallType" onchange="addFilter(this)">
                                        <option value="">--Select--</option>
                                        <option value="Initiated">Initiated</option>
                                        <option value="NotDailed">Not Dailed</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-2" id="divDispo">
                                <div class="form-group">
                                    <label>Disposition</label>
                                    @Html.DropDownList("disposition", new SelectList(Model.dispoList, "disposition", "disposition"), "--Select--", new { @class = "filter form-control", @data_field = "disposition", @onchange = "addFilter(this)" })
                                    @*<select class="filter form-control" id="disposition" data-column-index="5">
                    <option value="0">--Select--</option>
                    @for (dispo < -dispoList)
                    {
                        <option value="@dispo.getDisposition()">@dispo.getDisposition()</option>
                    }
                </select>*@
                                </div>
                            </div>
                            <div class="col-md-2" id="callstatus">
                                <div class="form-group">
                                    <label>Call Status</label>
                                    <select class="filter form-control" data-field="callStatus" onchange="addFilter(this)">
                                        <option value="">--Select--</option>
                                        <option value="1">Connected</option>
                                        <option value="0">Not Connected</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-2" id="reasonDispo" style="display:none;">
                                <div class="form-group">
                                    <label>Secondary&nbsp;Disposition</label>
                                    @Html.DropDownList("reasons", new SelectList(Model.dispoList, "id", "disposition"), "--Select--", new { @class = "filter form-control", @data_field = "SecondReason", @onchange = "addFilter(this)" })
                                    @*<select class="filter form-control selectpicker" id="reasons" data-column-index="7" name="reasons" multiple data-actions-box="true">
                    @for (dispo < -reasonsList)
                    {
                        <option value="@dispo.getId()">@dispo.getDisposition()</option>
                    }
                </select>*@
                                </div>
                            </div>
                            <div class="col-md-2" id="divCRE_s">
                                <div class="form-group">
                                    <label>User Name</label>
                                    @Html.DropDownList("ddlCreIds", new SelectList(Model.creList.OrderBy(m => m.userName), "id", "userName"), new { @id = "ddlcreList", @class = "filter form-control selectpicker ", @data_field = "cresName", @onchange = "addFilter(this)", @multiple = "multitple" })
                                    @*<select class="filter form-control selectpicker" data-column-index="6" id="ddlCreIds" name="ddlCreIds" multiple>
                    @for (crelistIs < -crelist)
                    {
                        <option value="@crelistIs.getId()">@crelistIs.getUserName()</option>
                    }
                </select>*@
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-group">
                                    <label>&nbsp;</label><br />
                                    <button type="submit" id="searchCust" class="btn btn-primary btn-block">
                                        <i class="fa fa-search"></i>
                                        <span>Search</span>
                                    </button>
                                </div>
                            </div>
                            <div class="col-md-2" style="display:none;">
                                <div class="form-group">
                                    <label>&nbsp;</label><br />
                                    <button type="submit" id="clearCust" onclick="clear();" class="btn btn-danger btn-block">
                                        <i class="fa fa-trash-o"></i>
                                        <span>Clear</span>
                                    </button>
                                </div>
                            </div>
                            <div class="col-md-2" style="display:none;">
                                <div class="form-group">
                                    <label>&nbsp;</label><br />
                                    <button type="submit" id="multiDownload" onclick="downloadTableAudioData();" class="btn btn-primary btn-block">
                                        <i class="fa fa-download"></i>
                                        <span>Download All Table Files</span>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="panel panel-default" id="dataPanel" style="display:none;">
                    <div class="panel-body">
                        <div>
                            <table class="table table-striped table-bordered table-hover" id="recordingTable" width="100%">
                                <thead>
                                    <tr>
                                        <th>Call&nbsp;Date</th>
                                        <th>Call&nbsp;Time</th>
                                        <th id="cmrInitiate">CRM&nbsp;Initiated&nbsp;?</th>
                                        <th id="cmrInitiate">Call Mode</th>
                                        <th>User&nbsp;Name</th>
                                        <th id="campain">Campaign</th>
                                        <th>Customer&nbsp;Name</th>
                                        <th>Phone&nbsp;No</th>
                                        <th>Veh&nbsp;No</th>
                                        <th>Chasssis&nbsp;No</th>
                                        <th id="dispo">Disposition</th>
                                        <th id="secondaryDispo">Secondary&nbsp;Disposition</th>
                                        <th>Media</th>
                                    </tr>
                                </thead>
                                <tbody>

                                </tbody>
                            </table>
                        </div>
                        <div class="row">
                            <div class=" col-md-12">
                                <span id="tblException" style="font-size:12pt;color:red"></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script type="text/javascript">
        var callRecordingOf = '@ViewBag.recordingFor';
        var filtDist = {};

        var codePath = window.location.href;
        var callIndex = codePath.indexOf('CallRecordings');
        var callPath = codePath.substr(callIndex, (codePath.length - 1));
        codePath = codePath.replace(callPath, '');

        if (callRecordingOf == "Other") {
            $('#divCampaign').css({ 'display': 'none' });
            $('#divCallType').css({ 'display': 'none' });
            $('#divCRMType').css({ 'display': 'none' });
            $('#divDispo').css({ 'display': 'none' });
            var cres = $('#divCRE_s').clone();
            $('#divCRE_s').remove();
            $('#firstRow').append(cres);
        }

        function addFilter(item) {
            var field = $(item).attr('data-field');
            var data = $(item).val();
            //var secondaryReason = "";
            var cres = "";
            value = item.value;
            if (field === "cresName") {
                cres = "";
                if (item.selectedOptions.length > 0) {
                    for (var i = 0; i < item.selectedOptions.length; i++) {
                        if (i == 0) {
                            cres = item.selectedOptions[i].value;
                        }
                        else {
                            cres = cres + ',' + item.selectedOptions[i].value;
                        }
                    }
                }
                filtDist[field] = cres; 
                filtDist["isFiltered"] = true;
            }
            else {
                if (filtDist[field] === undefined) {
                    filtDist[field] = data;
                    filtDist["isFiltered"] = true;
                }
                else {
                    filtDist[field] = data;
                    filtDist["isFiltered"] = true;
                }
            }

            
            //getFilteredData();
        }


        $('#searchCust').click(function () {
            $('#dataPanel').show();
            if (callRecordingOf === "SMR") {
                filtDist["FilterFor"] = 1;
                loadSMRData();
            }
            else if (callRecordingOf === "IR" || callRecordingOf === "PSF") {
                loadIROrPSFData();
            }
            else if (callRecordingOf === "postsales") {
                filtDist["FilterFor"] = 5;
                loadpostsalesdata();
            }
            else if (callRecordingOf === "Other") {
                filtDist["FilterFor"] = 4;
                loadOther();
            }
        });
        

        $(document).ready(function () {
            //debugger;
            $(".datepickerAfter").datepicker({
                autoclose: true,
                dateFormat: 'yy-mm-dd',
            });

            //if (callRecordingOf === "SMR") {
            //    filtDist["FilterFor"] = 1;
            //    loadSMRData();
            //}
            //else if (callRecordingOf === "IR" || callRecordingOf === "PSF") {
            //    loadIROrPSFData();
            //}
            //else if (callRecordingOf === "Other") {
            //    filtDist["FilterFor"] = 4;
            //    loadOther();
            //}
            //table.api().draw();
        });

        //function loads SMR-Data
        function loadSMRData() {
            $('#recordingTable').DataTable({
                "destroy": true,
                "ajax": {
                    "url": siteRoot+"/CallRecordings/getCallData/",
                    "type": "POST",
                    "datatype": "json",
                    "data": { jsonData: JSON.stringify(filtDist) }
                },
                "columns": [
                    {
                        "data": "callDate", "name": "callDate", render: function (data, type, row) {
                            //debugger;
                            return parseJsonDateTime(data);
                        }
                    },
                    { "data": "callTime", "name": "callTime" },
                    { "data": "isCallinitaited", "name": "isCallinitaited" },
                    { "data": "call_mode", "name": "call_mode" },
                    { "data": "userName", "name": "userName" },
                    { "data": "campaignName", "name": "campaignName" },
                    { "data": "customerName", "name": "customerName" },
                    { "data": "phoneNumber", "name": "phoneNumber" },
                    { "data": "vehicleRegNo", "name": "vehicleRegNo" },
                    { "data": "chassisNo", "name": "chassisNo" },
                    { "data": "Disposition", "name": "Disposition" },
                    {
                        "data": "Secondary Disposition", "render": function (data, type, row) {
                            return "Secondary Disposition";
                        }
                    },
                    {
                        "data": "media", render: function (data, type, row) {

                            if (row.callstatus == "Connected") {
                                var filePath = "";
                                if (data != null && data != undefined && (data.includes('http:') || data.includes('https:'))) {
                                    var startIndex = "";
                                    if (data.includes('http:')) {
                                        startIndex = data.indexOf('http');
                                    }
                                    else if (data.includes('https:')) {
                                        startIndex = data.indexOf('https');
                                    }

                                    filePath = data.substring(startIndex, data.length);
                                }
                                else {
                                    filePath = codePath + data;
                                }
                                return "<audio controls><source src='" + filePath + "' type='audio/mp3'></audio>" + "<a href='" + filePath + "' download><i class='fa fa-download'></i></a>";
                            }
                            else {
                                return "<i class='fa fa-phone'></i>&nbsp;Call Not Connected...";
                            }
                        }
                    }
                ],
                "serverSide": "true",
                "processing": "true",
                "serverSide": true,
                "scrollX": "true",
                "scrollY": "300",
                "paging": "true",
                "pagingType": "full_numbers",
                "searching": true,
                "language": {
                    "processing": "Loading Please Wait.....!"
                },
                "initComplete": function (data) {
                    $('#tblException').text(data.json.exception);
                    // filtercountDisplay();

                }
            });
        }

        //function loads IR Data
        function loadIROrPSFData() {
            if (callRecordingOf === "IR") {
                filtDist["FilterFor"] = 2;
            }
            else if (callRecordingOf === "PSF") {
                filtDist["FilterFor"] = 3;
            }
            $('#secondaryDispo').remove();
            $('#recordingTable').DataTable({
                "destroy": true,
                "ajax": {
                    "url": siteRoot+"/CallRecordings/getCallData/",
                    "type": "POST",
                    "datatype": "json",
                    "data": { jsonData: JSON.stringify(filtDist) }
                },
                "columns": [
                    {
                        "data": "callDate", "name": "callDate", render: function (data, type, row) {
                            return parseJsonDateTime(data);
                        }
                    },
                    { "data": "callTime", "name": "callTime" },
                    { "data": "isCallinitaited", "name": "isCallinitaited" },
                    { "data": "call_mode", "name": "call_mode" },
                    { "data": "userName", "name": "userName" },
                    { "data": "campaignName", "name": "campaignName" },
                    { "data": "customerName", "name": "customerName" },
                    { "data": "phoneNumber", "name": "phoneNumber" },
                    { "data": "vehicleRegNo", "name": "vehicleRegNo" },
                    { "data": "chassisNo", "name": "chassisNo" },
                    { "data": "Disposition", "name": "Disposition" },
                    {
                        "data": "media", render: function (data, type, row) {
                            var filePath = "";
                            if (row.callstatus == "Connected") {
                                var filePath = "";
                                if (data != null && data != undefined && (data.includes('http:') || data.includes('https:'))) {
                                    var startIndex = "";
                                    if (data.includes('http:')) {
                                        startIndex = data.indexOf('http');
                                    }
                                    else if (data.includes('https:')) {
                                        startIndex = data.indexOf('https');
                                    }

                                    filePath = data.substring(startIndex, data.length);
                                }
                                else {
                                    filePath = codePath + data;
                                }
                                return "<audio controls><source src='" + filePath + "' type='audio/mp3'></audio>" + "<a href='" + filePath + "' download><i class='fa fa-download'></i></a>";
                            }
                            else {
                                return "<i class='fa fa-phone'></i>&nbsp;Call Not Connected...";
                            }
                        }
                    }
                ],
                "serverSide": "true",
                "processing": "true",
                "serverSide": true,
                "scrollX": "true",
                "scrollY": "300",
                "paging": "true",
                "searching": true,
                "language": {
                    "processing": "Loading Please Wait.....!"
                },
                 "initComplete": function (data) {
                    $('#tblException').text(data.json.exception);
                    // filtercountDisplay();

                }
            });
        }

        //function load postsales Recording Data
        function loadpostsalesdata() {
            $('#recordingTable').DataTable({
                "destroy": true,
                "ajax": {
                    "url": siteRoot + "/CallRecordings/getCallData/",
                    "type": "POST",
                    "datatype": "json",
                    "data": { jsonData: JSON.stringify(filtDist) }
                },
                "columns": [
                    {
                        "data": "callDate", "name": "callDate", render: function (data, type, row) {
                            //debugger;
                            return parseJsonDateTime(data);
                        }
                    },
                    { "data": "callTime", "name": "callTime" },
                    { "data": "isCallinitaited", "name": "isCallinitaited" },
                    { "data": "call_mode", "name": "call_mode" },
                    { "data": "userName", "name": "userName" },
                    { "data": "campaignName", "name": "campaignName" },
                    { "data": "customerName", "name": "customerName" },
                    { "data": "phoneNumber", "name": "phoneNumber" },
                    { "data": "vehicleRegNo", "name": "vehicleRegNo" },
                    { "data": "chassisNo", "name": "chassisNo" },
                    { "data": "Disposition", "name": "Disposition" },
                    {
                        "data": "Secondary Disposition", "render": function (data, type, row) {
                            return "Secondary Disposition";
                        }
                    },
                    {
                        "data": "media", render: function (data, type, row) {

                            if (row.callstatus == "Connected") {
                                var filePath = "";
                                if (data != null && data != undefined && (data.includes('http:') || data.includes('https:'))) {
                                    var startIndex = "";
                                    if (data.includes('http:')) {
                                        startIndex = data.indexOf('http');
                                    }
                                    else if (data.includes('https:')) {
                                        startIndex = data.indexOf('https');
                                    }

                                    filePath = data.substring(startIndex, data.length);
                                }
                                else {
                                    filePath = codePath + data;
                                }
                                return "<audio controls><source src='" + filePath + "' type='audio/mp3'></audio>" + "<a href='" + filePath + "' download><i class='fa fa-download'></i></a>";
                            }
                            else {
                                return "<i class='fa fa-phone'></i>&nbsp;Call Not Connected...";
                            }
                        }
                    }
                ],
                "serverSide": "true",
                "processing": "true",
                "serverSide": true,
                "scrollX": "true",
                "scrollY": "300",
                "paging": "true",
                "pagingType": "full_numbers",
                "searching": true,
                "language": {
                    "processing": "Loading Please Wait.....!"
                },
                "initComplete": function (data) {
                    $('#tblException').text(data.json.exception);
                    // filtercountDisplay();

                }
            });
        }

        //function load Other Recording Data
        function loadOther() {
            $('th#secondaryDispo').remove();
            $('th#dispo').remove();
            $('th#campain').remove();
            $('th#cmrInitiate').remove();
            //debugger;
            $('#recordingTable').DataTable({
                "destroy": true,
                "ajax": {
                    "url": siteRoot+"/CallRecordings/getCallData/",
                    "type": "POST",
                    "datatype": "json",
                    "data": { jsonData: JSON.stringify(filtDist) }
                },
                "columns": [
                    {
                        "data": "callDate", "name": "callDate", render: function (data, type, row) {
                            return parseJsonDateTime(data);
                        }
                    },
                    { "data": "callTime", "name": "callTime" },
                    { "data": "userName", "name": "userName" },
                    { "data": "customerName", "name": "customerName" },
                    { "data": "phoneNumber", "name": "phoneNumber" },
                    { "data": "vehicleRegNo", "name": "vehicleRegNo" },
                    { "data": "chassisNo", "name": "chassisNo" },
                    {
                        "data": "media", render: function (data, type, row) {
                            var filePath = "";
                            if (row.callstatus == "Connected") {
                                var filePath = "";
                                if (data != null && data != undefined && (data.includes('http:') || data.includes('https:'))) {
                                    var startIndex = "";
                                    if (data.includes('http:')) {
                                        startIndex = data.indexOf('http');
                                    }
                                    else if (data.includes('https:')) {
                                        startIndex = data.indexOf('https');
                                    }

                                    filePath = data.substring(startIndex, data.length);
                                }
                                else {
                                    filePath = codePath + data;
                                }
                                return "<audio controls><source src='" + filePath + "' type='audio/mp3'></audio>" + "<a href='" + filePath + "' download><i class='fa fa-download'></i></a>";
                            }
                            else {
                                return "<i class='fa fa-phone'></i>&nbsp;Call Not Connected...";
                            }
                        }
                    }
                ],
                "serverSide": "true",
                "processing": "true",
                "serverSide": true,
                "scrollX": "true",
                "scrollY": "300",
                "paging": "true",
                "searching": true,
                "language": {
                    "processing": "Loading Please Wait.....!"
                },
                "initComplete": function (data) {
                    $('#tblException').text(data.json.exception);
                    // filtercountDisplay();

                }
            });
        }

        function clear() {
            $('.filter').val('');
            $("#ddlcreList").multiselect('rebuild');
        }

        
        $('#disposition').on('change', function () {
            if ($('#disposition').val() == "Service Not Required") {
                $('#reasonDispo').show();
            }
            else {
                $('#reasonDispo').hide();
            }
        });

        function downloadTableAudioData() {
            $('.callDownload').each(function () {
                $(this).trigger('click');
            });
        }
    </script>    
}